import { EntityManager } from "./entitymanager";
import { Query } from "./query";
/**
 * 原生查询
 */
declare class NativeQuery extends Query {
    /**
     * 构造原生查询对象
     * @param sql               sql语句
     * @param em                entity manager
     * @param entityClassName   实体类名
     */
    constructor(sql: string, em: EntityManager, entityClassName?: string);
    /**
     * 设置查询参数值，占位符支持下标和字符串
     * @param index     占位符
     * @param value     参数值
     * @since 0.4.0
     */
    setParameter(index: number | string, value: any): void;
    /**
     * 设置多个参数值，数组从下标0开始|对象以属性名绑定
     * @param valueArr 值数组|值对象
     * @since 0.4.0
     */
    setParameters(valueArr: any[] | object): void;
    /**
     * 获取单个实体或单个属性值
     * @returns     结果
     */
    getResult(): Promise<any>;
    /**
     * 获取结果列表
     * @param start     开始索引
     * @param limit     记录数
     * @returns         结果集
     */
    getResultList(start?: number, limit?: number): Promise<any>;
    /**
     * 根据查询结果生成单个数据对象
     * @param r     原生查询结果
     * @returns     转化实体对象
     */
    private genOne;
}
export { NativeQuery };
