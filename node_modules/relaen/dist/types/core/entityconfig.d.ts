import { IEntityCfg, IEntityColumn, IEntityPKey, IEntityRelation } from "./types";
/**
 * 实体工厂中的实体配置对象
 * @since 1.0.0
 */
export declare class EntityConfig {
    /**
     * 实体类
     */
    entity?: any;
    /**
     * 表名
     */
    table?: string;
    /**
     * 数据库名
     */
    schema?: string;
    /**
     * 主键
     */
    id?: IEntityPKey;
    /**
     * 版本属性名，用于
     */
    version?: string;
    /**
     * 字段集合，键为对象属性名(非表字段名)
     */
    columns: Map<string, IEntityColumn>;
    /**
     * 关系集合，键为对象属性名(非表字段名)
     */
    relations: Map<string, IEntityRelation>;
    /**
     * 构造器
     * @param cfg   实体配置对象
     */
    constructor(cfg?: IEntityCfg);
    /**
     * 设置表名
     * @param tableName
     */
    setTableName(tableName: string): void;
    /**
     * 设置schema名
     * @param schemaName
     */
    setSchemaName(schemaName: string): void;
    /**
     * 设置实体类
     * @param entityCls     实体类
     */
    setEntityClass(entityCls: any): void;
    /**
     * 设置主键对象
     * @param cfg   主键配置
     */
    setId(cfg: IEntityPKey): void;
    /**
     * 获取id对象
     * @returns     主键字段对象
     * @throws      错误码 0020
     */
    getId(): IEntityPKey;
    /**
     * 获取id字段名
     * @returns id字段名
     */
    getIdName(): string;
    /**
     * 获取字段对象
     * @param propName  实体属性名
     * @returns         属性对应字段对象
     * @throws          错误码0022
     */
    getColumn(propName: string): IEntityColumn;
    /**
     * 获取对应表名
     * @param withSchema    是否返回schema
     * @returns             table name
     */
    getTableName(withSchema?: boolean): string;
    /**
     * 获取schema名
     * @returns     schema name
     */
    getSchemaName(): string;
    /**
     * 属性名是否对应关系字段
     * @param propName  属性名
     * @returns         true/false
     */
    hasRelation(propName: string): boolean;
    /**
     * 属性名是否是字段
     * @param propName  属性名
     * @returns         true/false
     */
    hasColumn(propName: string): boolean;
    /**
     * 获取关系字段对象
     * @param propName  实体属性名
     * @returns         实体属性对应关系对象
     * @throws          0023
     */
    getRelation(propName: string): IEntityRelation;
    /**
     * 添加列
     * @param colName   属性名
     * @param cfg       列配置
     */
    addColumn(colName: string, cfg: IEntityColumn): void;
    /**
     * 添加关系
     * @param colName   属性名
     * @param cfg       关系配置
     */
    addRelation(colName: string, cfg: IEntityRelation): void;
}
